package mips_pipeline;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

import org.supercsv.io.CsvListWriter;
import org.supercsv.io.ICsvListWriter;
import org.supercsv.prefs.CsvPreference;


public class OutputWriter {

	public static int colCount = 0;
	
	public static ArrayList <String[]> cols = new ArrayList();
	
	public static void addCol(Registers registers, int cc) {
		
		String[] col = new String[19];
		col[0] = "CC" +cc;
		col[1] = String.valueOf(registers.getIfidRs());
		col[2] = String.valueOf(registers.getIfidRt());
		col[3] = String.valueOf(registers.getIfidRd());
		
		col[4] = String.valueOf(registers.getIdexRs());
		col[5] = String.valueOf(registers.getIdexRt());
		col[6] = String.valueOf(registers.getIdexRd());
		col[7] = String.valueOf(registers.getIdexWr());
		col[8] = String.valueOf(registers.getIdexRe());
		col[9] = String.valueOf(registers.getIdexDst());
		
		col[10] = String.valueOf(registers.getExmemRd());
		col[11] = String.valueOf(registers.getExmemWr());
		
		col[12] = String.valueOf(registers.getMemwbRd());
		col[13] = String.valueOf(registers.getMemwbWr());
		
		col[14] = String.valueOf(registers.getForwardA());
		col[15] = String.valueOf(registers.getForwardB());
		
		col[16] = String.valueOf(registers.getPcWrite());
		col[17] = String.valueOf(registers.getIfidWr());
		col[18] = String.valueOf(registers.getIdexFl());
		
		cols.add(col);
		
	}
	
	
	public static void writeOutLine() {
		String[] col = new String[19];
		
		col[0] = " ";
		col[1] = "IF/ID.registerRs";
		col[2] = "IF/ID.registerRt";
		col[3] = "IF/ID.registerRd";
		
		col[4] = "ID/EX.registerRs";
		col[5] = "ID/EX.registerRt";
		col[6] = "ID/EX.registerRd";
		col[7] = "ID/EX.regWrite";
		col[8] = "ID/EX.memRead";
		col[9] = "ID/EX.RegDst";
		

		col[10] = "EX/MEM.registerRd";
		col[11] = "EX/MEM.regWrite";
		
		col[12] = "MEM/WB.registerRd";
		col[13] = "MEM/WB.regWrite";
		
		col[14] = "ForwardA";
		col[15] = "ForwardB";
		
		col[16] = "PCWrite";
		col[17] = "IF/IDWrite";
		col[18] = "ID/EXFlush";
		cols.add(col);


		
		
	}
	public static void write(Registers register) {
		
		ICsvListWriter csvWriter = null;
		
		try {
			csvWriter = new CsvListWriter(new FileWriter("out.csv"), CsvPreference.STANDARD_PREFERENCE);
			
			for(int i = 0; i < cols.size(); i++) {
				csvWriter.write(cols.get(i));
			}
		}catch(IOException e) {
			e.printStackTrace();
		}finally {
			try {
				csvWriter.close();
				
			}catch(IOException e) {
				
			}
		}
		
		
	}
}
